name: Python workflow

on:
  push:
    paths:
    - 'app_python/**'
    - '.github/workflows/python.yml'
    - '.pre-commit-config.yaml'
  pull_request:
    paths:
    - 'app_python/**'
    - '.github/workflows/python.yml'
    - '.pre-commit-config.yaml'

defaults:
  run:
    working-directory: ./app_python

jobs:
  lint-test-job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10" ]
    steps:
    - name: Checkout repo.
      uses: actions/checkout@v3

    - name: Install Python.
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: |
          ./app_python/requirements-base.txt
          ./app_python/requirements-dev.txt

    - name: Install dependencies.
      run: |
        pip install -r requirements-base.txt -r requirements-dev.txt

    - name: Lint with bandit.
      uses: pre-commit/action@v3.0.0
      with:
        extra_args: bandit --all-files

    - name: Lint with flake8.
      uses: pre-commit/action@v3.0.0
      with:
        extra_args: flake8 --all-files

    - name: Lint with black.
      uses: pre-commit/action@v3.0.0
      with:
        extra_args: black --all-files

    - name: Lint with isort.
      uses: pre-commit/action@v3.0.0
      with:
        extra_args: isort --all-files

    - name: Test with pytest.
      run: |
        pytest

  # From https://github.com/snyk/actions/tree/master/python-3.10
  security-job:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v3
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.10@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
                --package-manager=pip
                --skip-unresolved
                --file=app_python/requirements-base.txt
                --file=app_python/requirements-dev.txt

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  docker-build-push-job:
    needs: [lint-test-job, security-job]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ./app_python
          file: ./app_python/Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/timeapp:latest
