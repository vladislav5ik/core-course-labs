name: Golang workflow

on:
  push:
    paths:
    - 'app_go/**'
    - '.github/workflows/golang.yml'
  pull_request:
    paths:
    - 'app_go/**'
    - '.github/workflows/golang.yml'

defaults:
  run:
    working-directory: ./app_go

jobs:
  lint-test-job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.19' ]

    steps:
      - name: Checkout repo.
        uses: actions/checkout@v4

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: app_go/go.sum

      - name: Display Go version.
        run: go version

      - name: Install dependencies.
        run: go get .

      - name: Lint using go fmt.
        run: go fmt

      - name: Build Go app.
        run: go build

      - name: Test with Go test.
        run: go test -json > TestResults-${{ matrix.go-version }}.json

      - name: Upload Go test results.
        uses: actions/upload-artifact@v3
        with:
          name: Go-results-${{ matrix.go-version }}
          path: app_go/TestResults-${{ matrix.go-version }}.json


  # https://github.com/snyk/actions/tree/master/golang
  security-job:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v3

      - name: Run Snyk to check for vulnerabilities.
        uses: snyk/actions/golang@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
                --file=app_go/go.mod

      - name: Upload result to GitHub Code Scanning.
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  docker-build-push-job:
    needs: [lint-test-job, security-job]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v3

      - name: Set up Docker Buildx.
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub.
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push.
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ./app_go
          file: ./app_go/Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/timeapp-go:latest
