apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "app-golang-chart.fullname" . }}
  labels:
    {{- include "app-golang-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  podManagementPolicy: Parallel
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.persistentVolume.name }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.persistentVolume.size }}
  selector:
    matchLabels:
      {{- include "app-golang-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app-golang-chart.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app-golang-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-container-one
          image: busybox:1.28
          command:
          - wget
          - "-O"
          - "/work-dir/index.html"
          - http://info.cern.ch
          volumeMounts:
          - name: init-volume
            mountPath: "/work-dir"
        - name: init-container-two
          image: busybox:1.28
          command:
          - "sh"
          - "-c"
          - 'echo messageOne >> /work-dir/file'
          volumeMounts:
          - name: init-volume
            mountPath: "/work-dir"
        - name: init-container-three
          image: busybox:1.28
          command:
          - "sh"
          - "-c"
          - 'echo messageTwo >> /work-dir/file'
          volumeMounts:
          - name: init-volume
            mountPath: "/work-dir"
        - name: init-container-four
          image: busybox:1.28
          command:
          - "sh"
          - "-c"
          - 'echo messageThree >> /work-dir/file'
          volumeMounts:
          - name: init-volume
            mountPath: "/work-dir"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- include "app-golang-chart.secrets" . | nindent 12 }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
